package com.chapter12localdate;import java.time.LocalDate;import java.time.temporal.ChronoField;/** * Created by wangwenchao02 on 2017/8/28. */public class TestLocalDate {    public static void main(String[] args) {        LocalDate ld = LocalDate.now();        // 以 2017/08/28 为例        System.out.println(ld.getChronology()); // ISO        System.out.println(ld.getDayOfMonth()); // 28        System.out.println(ld.getDayOfWeek());  // MONDAY        System.out.println(ld.getDayOfYear());  // 240        System.out.println(ld.getEra());        // CE        System.out.println(ld.getMonth());      // AUGUST        System.out.println(ld.getMonthValue()); // 8        System.out.println(ld.getYear());       // 2017        System.out.println(ld.isLeapYear());        // FALSE, 闰年        System.out.println(ld.lengthOfMonth());     // 31        System.out.println(ld.lengthOfYear());      // 365        System.out.println(ld.get(ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH));        System.out.println(LocalDate.MAX);        System.out.println(LocalDate.MIN);        System.out.println(LocalDate.of(2019, 8, 31));        System.out.println(LocalDate.ofEpochDay(1000)); // 与 1970-01-01 比        System.out.println(LocalDate.ofYearDay(2018, 200)); // 2018-07-19        System.out.println(LocalDate.parse("2019-09-30"));    }}