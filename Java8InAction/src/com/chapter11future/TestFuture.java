package com.chapter11future;import java.util.concurrent.Callable;import java.util.concurrent.ExecutionException;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors;import java.util.concurrent.Future;import java.util.concurrent.TimeUnit;import java.util.concurrent.TimeoutException;/** * Created by wangwenchao02 on 2017/8/28. */public class TestFuture {    public static void main(String[] args) {        ExecutorService es = Executors.newCachedThreadPool();        Future<Double> f = es.submit(new Callable<Double>() {            @Override            public Double call() throws Exception {                System.out.println("Callable!");                TimeUnit.SECONDS.sleep(5);                return Math.random();            }        });        System.out.println("Future has been done");        try {            Double result = f.get(10, TimeUnit.SECONDS);            System.out.println(result);        } catch (InterruptedException e) {            e.printStackTrace();        } catch (ExecutionException e) {            e.printStackTrace();        } catch (TimeoutException e) {            e.printStackTrace();        }    }}